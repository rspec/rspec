#!/usr/bin/env ruby

# Turn on verbose to make sure we not generating any ruby warning
$VERBOSE = true

# So our "did they run the rspec command?" detection logic thinks
# that we run `rspec`.
$0 = "rspec"

<<<<<<< HEAD
# This is necessary for when `--standalone` is being used.
$:.unshift File.expand_path '../../bundle', __FILE__

# For the travis build we put the bundle directory up a directory
# so it can be shared among the repos for faster bundle installs.
$:.unshift File.expand_path '../../../bundle', __FILE__

require 'bundler/setup'

# To use simplecov while running rspec-core's test suite, we must
# load simplecov _before_ loading any of rspec-core's files.
# So, this executable exists purely as a wrapper script that
# first loads simplecov, and then loads rspec.
begin
  # Simplecov emits some ruby warnings when loaded, so silence them.
  old_verbose, $VERBOSE = $VERBOSE, false

  unless ENV['NO_COVERAGE']
    require 'simplecov'

    SimpleCov.start do
      add_filter "bundle/"
      add_filter "tmp/"
      add_filter "spec/"
||||||| parent of 3a16d90f5 (Use script to run rspec for rspec-core)
=======
# For the monorepo build the bundle directory is at the top level
$:.unshift File.expand_path '../../../bundle', __FILE__

require 'bundler/setup'

# To use simplecov while running rspec-core's test suite, we must
# load simplecov _before_ loading any of rspec-core's files.
# So, this executable exists purely as a wrapper script that
# first loads simplecov, and then loads rspec.
begin
  # Simplecov emits some ruby warnings when loaded, so silence them.
  old_verbose, $VERBOSE = $VERBOSE, false

  unless ENV['NO_COVERAGE'] || RUBY_VERSION.to_f < 2.1
    require 'simplecov'

    SimpleCov.start do
      root File.expand_path("../..", __FILE__)
      add_filter %r{/bundle/}
      add_filter %r{/tmp/}
      add_filter %r{/spec/}
>>>>>>> 3a16d90f5 (Use script to run rspec for rspec-core)
      minimum_coverage(100)
    end
  end
rescue LoadError # rubocop:disable Lint/SuppressedException
ensure
  $VERBOSE = old_verbose
end

load File.expand_path("../../exe/rspec", __FILE__)
